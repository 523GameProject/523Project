function EnemyMgr() {	 this.left = 0;	 this.top = 0;	 // enemy in sight	this.enemys = new Array();	this.ctx = getEnemyContext();	// image source	this.stopImages = new Array();	this.shadowImage = null;}// load enemy image EnemyMgr.prototype.loadResource = function(loader) {		// stand image		this.stopImages[0] = new Array();	    this.stopImages[0][0] = loader.addImage("images/enemy.png");			//else	this.shadowImage = loader.addImage("img/effect/shadow.png");}// start enemy managementEnemyMgr.prototype.start = function() {	}// add an enemyEnemyMgr.prototype.add = function(enemy) {	this.enemys.push(enemy);}// redraw all enemiesEnemyMgr.prototype.redraw = function() {	// clear canvas	this.ctx.clearRect(0, 0, 1200, 600);	// redraw enemies one by one	for(var i = 0; i < this.enemys.length; i++)	{		this._redrawPlayer(this.enemys[i]);	}}/******* private functions  **********/EnemyMgr.prototype._redrawPlayer = function(enemy) {	var Image;	Image = this.stopImages[0][0];	//draw enemy image			drawImage(this.ctx, Image, (enemy.pos.x  - this.left) * grid.width, (enemy.pos.y - this.top) * grid.height, false);	//draw shadow image	drawImage(this.ctx, this.shadowImage, (enemy.pos.x  - this.left) * grid.width, (enemy.pos.y - this.top) * grid.height + 10, false);}function getEnemyContext(){	var canvas = document.getElementById("ene");    var ctx = 0;	if (canvas.getContext) {		ctx = canvas.getContext("2d");	}	return ctx;}function getRand(x, y) {    return Math.floor(Math.random()*y)+x;}function Enemy() {    xpos = getRand(0, 95);    ypos = getRand(0, 67);	this.id = 0;	//enemy's position	this.pos = {		x: xpos,		y: ypos	};}